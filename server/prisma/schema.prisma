generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String           @id @default(cuid())
  name         String
  email        String           @unique
  avatarUrl    String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  participants RoomParticipant[]
  hostedRooms  GameRoom[]       @relation("HostedRooms")
}

model Genre {
  id         String   @id @default(cuid())
  name       String   @unique
  description String?
  createdAt  DateTime @default(now())
  albums     Album[]
}

model Album {
  id        String   @id @default(cuid())
  name      String
  artist    String
  genre     Genre    @relation(fields: [genreId], references: [id])
  genreId   String
  coverUrl  String?
  createdAt DateTime @default(now())
  songs     Song[]
}

model Song {
  id         String   @id @default(cuid())
  title      String
  artist     String
  album      Album    @relation(fields: [albumId], references: [id])
  albumId    String
  youtubeUrl String
  duration   Int?
  createdAt  DateTime @default(now())
}

model GameRoom {
  id               String   @id @default(cuid())
  code             String   @unique
  host             User     @relation("HostedRooms", fields: [hostId], references: [id])
  hostId           String
  status           String
  currentQuestion  Int?
  createdAt        DateTime @default(now())
  participants     RoomParticipant[]
  sessions         GameSession[]
}

model RoomParticipant {
  id        String   @id @default(cuid())
  room      GameRoom @relation(fields: [roomId], references: [id])
  roomId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  avatarUrl String?
  joinedAt  DateTime @default(now())
}

model ScoringConfig {
  id                     String  @id @default(cuid())
  basePoints             Int     @default(100)
  speedBonusMultiplier   Int     @default(1)
  autoIncrement          Boolean @default(true)
}

model GameSession {
  id            String   @id @default(cuid())
  room          GameRoom @relation(fields: [roomId], references: [id])
  roomId        String
  questionsData Json
  finalScores   Json
  finishedAt    DateTime
}
